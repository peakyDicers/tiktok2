
EDIT
okay, bit of an update after some learning. first off, 
we need to see new line characters as 'line terminators', 
not 'line seperators'. do not think of a file requiring a 
new line at EOF, but instead think of every line in a
file requiring a line terminator INCLUDING the last line. 

now that we've got that straight. you can visualize what 
vim does with the :set list setting. 

from the very start, vim is adding a line terminator. this
is why in the earlier example, when you added text, and 
wrote to the file. 'wc -l foo' showed 1 line. 

vim is ensuring that every line you write, is terminated.


i think that's it.


i have been thinking about new lines at EOF all wrong.
these are not 'new line' characters, they are 'line terminator'
characters. 
------------------------------------------------------------
WITHOUT WARNING, 
vim will add a new line to the end of your file. 

touch foo
wc -l foo # this will show zero lines. that's cool. 

# now, vim foo, write some text. backspace it all. write to file.
wc -l foo # this will now show one line. 

what's most infurating is, when you vim foo, vim
doesn't show you the new line at the end of the file. 

it just magically adds it when you write to the file. 

???? don't touch my fking file wtf?

what's even more stupid is, if i already have a new line
at the end of file, it adds another one. like. 

i gotta make sure to not add a new line while writing
this now, so that i only have ONE new line at EOF. 
